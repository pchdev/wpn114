add_executable(${PROJECT_NAME} ${CMAKE_SOURCE_DIR}/main.cpp)
target_include_directories(${PROJECT_NAME} PUBLIC ${CMAKE_SOURCE_DIR})

if(WPN_AUDIO)

    message("WPN114: Building ${PROJECT_NAME} with audio features")
    add_subdirectory(audio)

    target_link_libraries(${PROJECT_NAME} wpn114audio)

    if(WPN_AUDIO_PLUGINS_AMBISONICS)
        message("WPN114: building with ambisonics audio plugin")
        target_link_libraries(${PROJECT_NAME} ambisonics)
    endif()
    if(WPN_AUDIO_PLUGINS_ASH)
        message("WPN114: building with ash audio plugin")
        target_link_libraries(${PROJECT_NAME} ash)
    endif()
    if(WPN_AUDIO_PLUGINS_BURSTS)
        message("WPN114: building with burst audio plugin")
        target_link_libraries(${PROJECT_NAME} bursts)
    endif()
    if(WPN_AUDIO_PLUGINS_FIELDS)
        message("WPN114: building with fields audio plugin")
        target_link_libraries(${PROJECT_NAME} fields)
    endif()
    if(WPN_AUDIO_PLUGINS_GRANARY)
        message("WPN114: building with granary audio plugin")
        target_link_libraries(${PROJECT_NAME} granary)
    endif()
    if(WPN_AUDIO_PLUGINS_ONESHOTS)
        message("WPN114: building with oneshots audio plugin")
        target_link_libraries(${PROJECT_NAME} oneshots)
    endif()
    if(WPN_AUDIO_PLUGINS_VBAP)
        message("WPN114: building with vbap audio plugin")
        target_link_libraries(${PROJECT_NAME} vbap)
    endif()
    if(WPN_AUDIO_PLUGINS_VST)
        message("WPN114: building with vst audio support")
        target_link_libraries(${PROJECT_NAME} wpn114vst)
    endif()

else()
    message("WPN114: Building ${PROJECT_NAME} without audio features")
endif()

if(WPN_CONTROL)

    message("WPN114: Building ${PROJECT_NAME} with control features")
    add_subdirectory(control)
    target_link_libraries(${PROJECT_NAME} wpn114control)

    if(WPN_CONTROL_PUSH)
        message("WPN114: building with ableton push control plugin")
        target_link_libraries(${PROJECT_NAME} wpn114push)
    endif()

else()
    message("WPN114: Building ${PROJECT_NAME} without control features")
endif()

if(WPN_COMMAND_LINE)

    message("WPN114: Building ${PROJECT_NAME} with command-line features")
    add_subdirectory(command)
    #target_link_libraries(${PROJECT_NAME} ${PROJECT_NAME}command)
else()

    message("WPN114: Building ${PROJECT_NAME} without command-line features")
endif()

if(WPN_OSSIA)
    add_definitions(-DWPN_OSSIA)
    add_subdirectory(network)
    target_include_directories(${PROJECT_NAME} PUBLIC /usr/local/include)
    target_link_libraries(${PROJECT_NAME} /usr/local/lib/libossia.dylib)
    target_link_libraries(${PROJECT_NAME} wpn114net)
endif()
